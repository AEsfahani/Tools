<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAEACAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABBvTgAQr05AEK+OgBDvjoARL47AEW+PABFvz0ARr89AEe/PgBIwEAAScBBAErAQQBLwEIAS8FDAEzB
        RABOwUUATsJGAE/CRwBQwkgAUcNJAFPDSwBUw0wAVMRMAFXETQBWxE4AV8VPAFnFUQBaxlIAXMZUAF/H
        VwBgyFgAYchaAGLIWgBkyV0AZcldAGbKXgBmyl8AZ8pgAGjKYQBoy2EAactiAGrLYwBrzGQAbcxmAG7N
        ZwBuzWgAcM1pAHHOagByzmwAc85sAHTPbQB0z24Adc9vAHbPbwB40HIAetFzAHvRdQB90nYAfdJ3AH7S
        eAB/0nkAgNN6AIHTewCD1H0AhtWAAIbVgQCH1YEAiNaCAIvXhQCM14YAjNeHAI3XiACO2IgAjtiJAJLZ
        jQCT2Y4Al9uSAJfbkwCY25MAmtyWAJvclgCc3ZcAnd2YAJ3dmQCe3ZoAn96aAKDemwCi350ApN+gAKXg
        oQCm4KIAqOGkAKvipwCs4qgAreOpAK/jqwCw5KwAs+WvALTlsAC15bIAtuazALjmtQC657cAvOi5AL3o
        ugC+6LsAv+m8AMDpvQDC6r8Aw+rBAMTrwQDF68IAxuvEAMfsxADI7MUAyezGAMnsxwDN7ssAzu7LAM/u
        zADQ784A0e/PANPw0QDU8NIA1fHTANbx1ADY8dYA2vLZAN3z2wDd89wA4PTfAOH14ADi9eEA4/XiAOX2
        5ADm9uQA5vblAOj35wDp9+gA6vjpAOv46gDs+OsA7PnrAO357ADu+e0A7/nuAPD67wDy+vEA8vvyAPP7
        8wD0+/MA9fv0APX89QD2/PYA+Pz3APj9+AD5/fkA+v36APv9+gD8/vwA/f79AP7+/QD+//4A////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAo6Ojo6OhoaGfn5+enp6enp6enp6enp6enp6enp6enp6enp6enp6enp6enp6enp6enp6enp6e
        n5+foaGho6Ojo6Ojo6Ghn56cnJqZl5eVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWV
        lZWXl5manJyen6Gho6Ojo6Ghn5yal5ORjoyKiomJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJ
        iYmJiYmKioyOkZOXmpyfoaGjo6GhnpyXkoyIg4B/fn19fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8
        fHx8fHx8fHx9fX5/gIOGjJKXnJ6hoaGhnpqVjoaAe3VxbGtoZ2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
        ZmZmZmZmZmZmZmZmZ2hrbHF1e4CGjpWanqGhn5yVjIN9dGliXVpXVlNTUlJSUlJSUlJSUlJSUlJSUlJS
        UlJSUlJSUlJSUlJSUlJSUlNWV1pdYml0fYOMlZqfn5yXjoN7bWJYTUlCPz09Ozo6Ojo6Ojo6Ojo6Ojo6
        Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojs9PT9CSU1YYm17g46XnJ+akoZ9bV9QRDoyKyglIyIhISEhISEhISEh
        ISEhISEhISEhISEhISEhISEhISEhISEiIyUoKzI6RFBfbX2Gkpqel4yAdGJQQTQnHhsZFhUUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUWGRseJzRBUGJ0gIyXnJOIfGlZRDQhGhMPDAsKCgkJ
        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
        AAAAAAAAAAAAAAAAAQQJFCI7UmZ8iZWJfGdTPSMVCgQBAAAAAAAAAAAAAAAHcaOjo6Ojo6Ojo6Ojo6Oj
        bgMAAAAAAAAAAAAAAAAAAAEEChUjPVNnfImViX1oVT4lFgsFAQAAAAAAAAAAAAAAAAFDcYSgo6Ojo6Oj
        o6F+RAMAAAAAAAAAAAAAAAAAAAABBQsWJT5VaH2Jl4p+a1c/KRkMBQIBAAAAAAAAAAAAAAAAAAAACzdH
        RkRCPSoOAAAAAAAAAAAAAAAAAAAAAAABAgUMGSk/V2t+ipeMf2xaQywbDwgDAQEAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQMHDxsrQ1lsf4yZjoBxXUkyHhMKBgMCAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAgMGChMeMkldcYCOmpGDdWJOOicaEQoHBQQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAUHChEaJzpNYnWDkZyTiHxpWUQ0IRoTDwwL
        CgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkKCgsMDxMaITREWGl8hpOel4yAdGJQQTQn
        HhsZFhUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUWGRseJzRBUGJ0gIyXn5qShn1t
        X1JEOjMsKSYkIyIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiMkJiksMjpEUl9tfYaSmp+c
        l46De21iWU5JQz8+PT07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs9PT4/Q0lOWWJte4OO
        l5yhn5yVjoN9dGliXVpXVlNTUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSU1NWV1pdYml0
        fYOMlZqfoaGempWOhoB7dXFsa2hnZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZnaGts
        cXV7gIaOlZqeoaOhoZ6cl5KMiIOAf359fXx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8
        fX1+f4CDhoySl5yeoaGjo6Ghn5yal5ORjoyKiomJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJ
        iYmJiYmKioyOkZOXmpyfoaGjo6OjoaGfn56cmpmXl5WVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWV
        lZWVlZWVlZWVlZeXmZqcnp+foaGjowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>